include Makefile.inc

KERNEL=kernel.bin
SOURCES=$(wildcard *.c)
SOURCES_ASM=$(wildcard asm/*.asm)
SOURCES_INTERRUPTIONS=$(wildcard interruptions/*.c)
SOURCES_LIB=$(wildcard lib/*.c)
SOURCES_MEMORYMANAGER=$(wildcard memoryManager/*.c)
SOURCES_PIPE=$(wildcard pipe/*.c)
SOURCES_SCHEDULER=$(wildcard scheduler/*.c)
SOURCES_SEMAPHORE=$(wildcard semaphore/*.c)

OBJECTS=$(SOURCES:.c=.o)
OBJECTS_ASM=$(SOURCES_ASM:.asm=.o)
OBJECTS_INTERRUPTIONS=$(SOURCES_INTERRUPTIONS:.c=.o)
OBJECTS_LIB=$(SOURCES_LIB:.c=.o)
OBJECTS_MEMORYMANAGER=$(SOURCES_MEMORYMANAGER:.c=.o)
OBJECTS_PIPE=$(SOURCES_PIPE:.c=.o)
OBJECTS_SCHEDULER=$(SOURCES_SCHEDULER:.c=.o)
OBJECTS_SEMAPHORE=$(SOURCES_SEMAPHORE:.c=.o)
LOADERSRC=loader.asm

MM=-D FREE_MANAGER

LOADEROBJECT=$(LOADERSRC:.asm=.o)
STATICLIBS=

all: $(KERNEL)

$(KERNEL): $(LOADEROBJECT) $(OBJECTS) $(STATICLIBS) $(OBJECTS_ASM) $(OBJECTS_INTERRUPTIONS) $(OBJECTS_LIB) $(OBJECTS_MEMORYMANAGER) $(OBJECTS_PIPE) $(OBJECTS_SCHEDULER) $(OBJECTS_SEMAPHORE)
	$(LD) $(LDFLAGS) -T kernel.ld -o $(KERNEL) $(LOADEROBJECT) $(OBJECTS) $(OBJECTS_ASM) $(STATICLIBS) $(OBJECTS_INTERRUPTIONS) $(OBJECTS_LIB) $(OBJECTS_MEMORYMANAGER) $(OBJECTS_PIPE) $(OBJECTS_SCHEDULER) $(OBJECTS_SEMAPHORE)
	$(LD) $(LDFLAGS) -T kernel.ld --oformat=elf64-x86-64 -o kernel.elf $(LOADEROBJECT) $(OBJECTS) $(OBJECTS_ASM) $(STATICLIBS) $(OBJECTS_INTERRUPTIONS) $(OBJECTS_LIB) $(OBJECTS_MEMORYMANAGER) $(OBJECTS_PIPE) $(OBJECTS_SCHEDULER) $(OBJECTS_SEMAPHORE)


%.o: %.c
	$(GCC) $(GCCFLAGS) -I./include $(MM) -c $< -o $@

%.o : %.asm
	$(ASM) $(ASMFLAGS) $< -o $@

$(LOADEROBJECT):
	$(ASM) $(ASMFLAGS) $(LOADERSRC) -o $(LOADEROBJECT)

clean:
	rm -rf asm/*.o *.o *.bin *.elf interruptions/*.o lib/*.o memoryManager/*.o pipe/*.o scheduler/*.o semaphore/*.o

.PHONY: all clean
